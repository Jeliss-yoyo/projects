{"remainingRequest":"D:\\workspace\\HBuilderX\\SF-Team\\nkplat-design\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\workspace\\HBuilderX\\SF-Team\\nkplat-design\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\workspace\\HBuilderX\\SF-Team\\nkplat-design\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\workspace\\HBuilderX\\SF-Team\\nkplat-design\\src\\components\\layout\\panel-right\\config-items\\DataSetting.vue?vue&type=template&id=8cf02b26&","dependencies":[{"path":"D:\\workspace\\HBuilderX\\SF-Team\\nkplat-design\\src\\components\\layout\\panel-right\\config-items\\DataSetting.vue","mtime":1578620372262},{"path":"D:\\workspace\\HBuilderX\\SF-Team\\nkplat-design\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1585119190579},{"path":"D:\\workspace\\HBuilderX\\SF-Team\\nkplat-design\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1609899827306},{"path":"D:\\workspace\\HBuilderX\\SF-Team\\nkplat-design\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1585119190579},{"path":"D:\\workspace\\HBuilderX\\SF-Team\\nkplat-design\\node_modules\\vue-loader\\lib\\index.js","mtime":1609899827306}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}